CS 3005 Notes

Control Structures:
  loops
  conditionals
  functions
Multiple source files

all cpp files:

int main() {
return 0;
}

all lines end with semicolon

assign integer x:
  int x
  x = 1
    can also be:
      int x = 1

input:
  std::cin, std::cout, "Prompt"
    must have #include <iostream> at the top

every function has to have a return type

terminal commands:
   g++ -c filename.cpp
   g++ -o filename filename.o
   make

   	don't need commands if they're in make

-------------------------------------------------

in makefile:
  all: main main2


in all filename.h files:
	#ifndef _FILENAME_H_
	#define _FILENAME_H_

	code

	#endif
	


pixel vectors

	width * height * 3 = vector 
	
	index:
	row * width*3 + col*3 + channel
	
	row 2, col 1, red (channel 1)
	2 * 4 * 3 + 1 * 3 + 0
	

	image class
		vector to represent pixels


PPM
	constraints on values
	write an image file to the disk
	use ppm format

	P6 WIDTH HEIGHT MAX\n


Inheritance:

	class: Point3D: public Point {
	public:
		Point3D();
		Point3D(const double& x, const double& y, const double& z);

		double getZ() const;
		
	}




repo name/assignment#

UNIT_TEST_WORKING_DIR=$(basename $(pwd))/01 SRC_ROOT_DIR=$(pwd) make -C ../dsu-cs-3005-unit-tests-2021-40 unit-test-01


debug:

google test from cit website


gdb ./filename

run

break function_name

where

continue

next
	shows line that will execute with another next

list

print (variable)

clear breakpoint
	clear function_name

info break

delete breakpoint
	delete #

quit


(exam 1 was here)


References:

	int x; // goes to stack
	int y; // same
	int& age = x; // adds a synonym of x
	age = 13; // same as x = 13
	y = x; // changes y to whatever x and age is



Maps (dictionaries):
	
	std::map<type of key, type of value>


	// if key in dict:
	
	if (map.find(key) != map.end()) {
		std::cout << key << std::endl;
	} else {
		std::cout << "!" << key << std::endl;
	}

	// for key in dict
	std::map<type, type>::iterator it;
	
	

MAKEFILES:

	CXX := g++
	CXXFLAGS := -Wall -Werror -std=c++11
	COMMON_OBJECTS := foo.o bar.o
	COMMON_HEADERS := foo.h bar.h
	
	main: main.o $(COMMON_OBJECTS)
		$(CXX) $(CXXFLAGS) -o $@ $^

	main2: main2.o $(COMMON_OBJECTS)
		$(CXX) $(CXXFLAGS) -o $@ $^

	main.o: main.cpp $(COMMON_HEADERS)
		$(CXX) $(CXXFLAGS) -c $<

	foo.o: foo.cpp $(COMMON_HEADERS)
		$(CXX) $(CXXFLAGS) -c $<
		
	bar.o: bar.cpp $(COMMON_HEADERS)
		$(CXX) $(CXXFLAGS) -c $<

	clean:
		-rm -f main main2
		-rm -f *.o
		-rm -f *~


self in py is this in c++


self.rhs == this->rhs

z1 + i == z1.operator+(i)


return *this;
	return the actual object at this address




methods go in the text section



number grid is stored on the heap, not on the stack
	stores the address of the number grid
		complex fractal, julia and mandelbrot sets are pointers to numbergrid



int *z; // z is on the stack
// can't do z = 2
z = new int;
*z = 2; // z is pointer to int, *z is int
		
delete z; // 

. binds tighter than *
(*mAnimal).speak()
or mAnimal->speak()

Animal *smokey = new Animal;
Cage c(smokey);
==
Cage c(new Animal);

valgrind ./heap-class

leaked memory means new variables weren't deleted

destructor method
	~Cage(); // never any parameters
	
Cage::~Cage() {
	delete mAnimal;
}



virtual object type:



Widget w1;
ShinyWidget s1;

widget *wp = &w1;
wp->showLocations;

wp = &s1; //widget pointer
wp->showLocations();

w1 = s1 will copy the widget parts from shiny widget

----------------------------------------------------------------------
10/20

q = &x; // q now holds the address of x 

&variable gives the address

*pointer gives you the actual object the pointer is pointing to







theads

#include <thread>


std::vector<std::thread> threads;

threads.push_back(std::thread(function, param1, param2));
threads.push_back(std::thread(function, param1, param2));

threads[0].join(); // wait until the func the thread called is done, then destroy the thread



std::ref(variable) // to pass in a parameter by reference


Makefile addition:
	
	LDFLAGS := -lpthread // for undefined reference



switch (c) {
	case 'q':
	case 27:
		// if c is 'q' or 27
		exit(0);
		break;
	case 'b':
		// do something when 'b' character is hit
		break;
	default:
		return; 
}

never manually call the display function



Makefile

DEPDIR := .d

check nov 29 zoom for the rest
time 10:47






	
















